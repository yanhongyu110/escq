<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	   xmlns:tx="http://www.springframework.org/schema/tx"
	   xmlns:context="http://www.springframework.org/schema/context" xmlns:task="http://www.springframework.org/schema/task"
	   xsi:schemaLocation="http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
     http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
     http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
     http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd">


	<!-- enable component scanning -->
	<context:component-scan base-package="com.jero.esc.*" />

	<!-- enable autowire -->
	<context:annotation-config />

	<!-- enable transaction demarcation with annotations -->
	<tx:annotation-driven />


	<!--<import resource="spirng-ehcache.xml"/>-->

	<!--<import resource="spring-redis-single.xml"/>-->



	<!--<context:property-placeholder location="classpath:database.properties" />-->




	<!--启用面向切面     并且使用动态代理-->
	<aop:aspectj-autoproxy proxy-target-class="true" />
	<!--<aop:aspectj-autoproxy />-->

	<!-- data source -->
	<!--<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">-->


	<import resource="spring-shiro-web.xml"/>

	<bean id="propertyConfigurer" class="com.jero.esc.common.EncryptPropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:database.properties</value>
			</list>
		</property>
	</bean>

	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
		<property name="driverClassName" value="${database.driverClassName}" />
		<property name="url" value="${database.url}" />
		<property name="username" value="${database.username}" />
		<property name="password" value="${database.password}" />
		<property name="testOnBorrow" value="true" />
		<property name="testOnReturn" value="true" />
		<property name="testWhileIdle" value="true" />
		<property name="timeBetweenEvictionRunsMillis" value="1800000" />
		<property name="numTestsPerEvictionRun" value="3" />
		<property name="minEvictableIdleTimeMillis" value="1800000" />
		<property name="maxActive" value="100" />
		<property name="maxIdle" value="5" />
		<property name="filters" value="mergeStat" />
	</bean>
	<!-- transaction manager -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>


    <!-- 自动扫描事务注解 -->
    <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class = "true"/>



	<!--定时任务的开启 以及多线程及线程池配置-->

	<!--<task:scheduled-tasks scheduler="myScheduler">&lt;!&ndash;xml配置方式&ndash;&gt;-->
	<!--<task:scheduled ref="scheduler" method="go"   fixed-delay="1000"/>-->
	<!--</task:scheduled-tasks>-->
	<task:annotation-driven scheduler="myScheduler" executor="executor"/>
	<task:executor id="executor" pool-size="5" />
	<task:scheduler id="myScheduler" pool-size="5"   /><!--线程池配置方式-->

	<!-- mybatis SqlSessionFactory -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!-- according to the actual situation add more properties -->
		<property name="typeAliasesPackage" value="com.jero.esc.po" />
		<property name="plugins">
			<array>
				<bean class="com.github.pagehelper.PageInterceptor">
					<!-- 这里的几个配置主要演示如何使用，如果不理解，一定要去掉下面的配置 -->
					<property name="properties">
						<value>
							helperDialect=mysql
							reasonable=true
							supportMethodsArguments=true
							params=count=countSql
							autoRuntimeDialect=true
						</value>
					</property>
				</bean>
			</array>
		</property>
	</bean>
	<!-- mybatis mapper(automatic scan configuration files -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- according to the actual situation add more properties -->
		<property name="basePackage" value="com.jero.esc.mapper" />
	</bean>


	<!--<import resource="spring-druid.xml"/>-->




</beans>