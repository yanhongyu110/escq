<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:task="http://www.springframework.org/schema/task" xmlns:tx="http://www.springframework.org/schema/tx" xmlns:cache="http://www.springframework.org/schema/cache" xmlns:aop="http://www.springframework.org/schema/aop"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-3.0.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">
	<!-- 
         自动搜索@Controller标注的类
         用于指明系统从哪个路径下寻找controller，然后提前初始化这些对象。
     -->
	<!-- enable component scanning -->
	<context:component-scan base-package="com.jero.esc.controller" />

	<!-- enable autowire -->
	<context:annotation-config />

	<!-- enable transaction demarcation with annotations -->
	<tx:annotation-driven />

	<!--启用面向切面     并且使用动态代理-->
	<aop:aspectj-autoproxy proxy-target-class="true" />




	<!--启用缓存注解功能-->
	<cache:annotation-driven cache-manager ="cacheManager"/>


	<mvc:annotation-driven>
		<mvc:message-converters>
			<bean class="com.jero.esc.common.shiro.realms.UTF8StringHttpMessageConverter" />
		</mvc:message-converters>
	</mvc:annotation-driven>



	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/**"/>
			<bean class="com.jero.esc.common.interceptor.TypeInterceptor"  />
		</mvc:interceptor>
		<mvc:interceptor>
			<mvc:mapping path="/goodsinfo/ServiceInfo/homeShow.html"  />
			<mvc:mapping path="/wap/goodsinfo/ServiceInfo/homeShow.html"  />
			<bean class="com.jero.esc.common.interceptor.ModuleInterceptor" />
		</mvc:interceptor>
		<mvc:interceptor>
			<mvc:mapping path="/**" />
			<bean class="com.jero.esc.common.interceptor.RepeatRequestInterceptor" />
		</mvc:interceptor>
		<!--<mvc:interceptor>-->
			<!--<mvc:mapping path="/**" />-->
			<!--<bean class="com.jero.esc.common.interceptor.AppInterceptor" />-->
		<!--</mvc:interceptor>-->
	</mvc:interceptors>



	<!-- 对静态资源文件的访问  方案一 （二选一） -->
	<mvc:default-servlet-handler />


	<!-- Default ViewResolver -->
	<bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />
		<property name="prefix" value="/WEB-INF/jsp/" />
		<property name="suffix" value=".jsp"></property>
	</bean>
	
	<!-- 文件上传bean 这里申明的id必须为multipartResolver  -->  
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">  
	    <property name="maxUploadSize" value="21000000"/>  
	</bean>


<bean id="exceptionResolver" class="com.jero.esc.common.exception.ExceptionHandler" />







</beans>